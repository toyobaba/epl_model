"0","#able(predictFTR, ModelData$FTR)"
"0",""
"0","#Collect Train and Test Data"
"0","library(caTools)"
"2","package ‘caTools’ was built under R version 3.6.3"
"0","set.seed(3000)"
"0","spl <- sample.split(ModelData$FTR, SplitRatio = 0.7)"
"0","Train <- subset(ModelData, spl == TRUE)"
"0","Test <- subset(ModelData, spl == FALSE)"
"0",""
"0","#Cross Validation"
"0","numFolds <- trainControl(method=""cv"", number=5)"
"0","cpGrid <- expand.grid(.cp=seq(0.001,0.1,0.001))#cp paramaeters to test as numbers from 0.0005 to 0.05, in increments of 0.01."
"0","train(FTR~., data = Train, method=""rpart"", trControl=numFolds, tuneGrid = cpGrid) #cp = 0.0155"
"1","CART"
"1"," "
"1","

"
"1","833"
"1",""
"1"," samples"
"1","
"
"1"," 31"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","  3"
"1"," "
"1","classes:"
"1"," "
"1","'A', 'D', 'H'"
"1"," "
"1","
"
"1","
"
"1","No pre-processing
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (5 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","666, 666, 667, 667, 666"
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  cp   "
"1","  Accuracy "
"1","  Kappa    "
"1","
"
"1","  0.001"
"1","  0.4801890"
"1","  0.1798340"
"1","
"
"1","  0.002"
"1","  0.4801890"
"1","  0.1798340"
"1","
"
"1","  0.003"
"1","  0.4885795"
"1","  0.1888603"
"1","
"
"1","  0.004"
"1","  0.4969627"
"1","  0.1991576"
"1","
"
"1","  0.005"
"1","  0.5053748"
"1","  0.2086958"
"1","
"
"1","  0.006"
"1","  0.5125676"
"1","  0.2190496"
"1","
"
"1","  0.007"
"1","  0.5233822"
"1","  0.2334689"
"1","
"
"1","  0.008"
"1","  0.5378256"
"1","  0.2539411"
"1","
"
"1","  0.009"
"1","  0.5414184"
"1","  0.2573822"
"1","
"
"1","  0.010"
"1","  0.5474280"
"1","  0.2548859"
"1","
"
"1","  0.011"
"1","  0.5486256"
"1","  0.2562752"
"1","
"
"1","  0.012"
"1","  0.5546425"
"1","  0.2488980"
"1","
"
"1","  0.013"
"1","  0.5630258"
"1","  0.2481462"
"1","
"
"1","  0.014"
"1","  0.5666186"
"1","  0.2442782"
"1","
"
"1","  0.015"
"1","  0.5666186"
"1","  0.2442782"
"1","
"
"1","  0.016"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.017"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.018"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.019"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.020"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.021"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.022"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.023"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.024"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.025"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.026"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.027"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.028"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.029"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.030"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.031"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.032"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.033"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.034"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.035"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.036"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.037"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.038"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.039"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.040"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.041"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.042"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.043"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.044"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.045"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.046"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.047"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.048"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.049"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.050"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.051"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.052"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.053"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.054"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.055"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.056"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.057"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.058"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.059"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.060"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.061"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.062"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.063"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.064"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.065"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.066"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.067"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.068"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.069"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.070"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.071"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.072"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.073"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.074"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.075"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.076"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.077"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.078"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.079"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.080"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.081"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.082"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.083"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.084"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.085"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.086"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.087"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.088"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.089"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.090"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.091"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.092"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.093"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.094"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.095"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.096"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.097"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.098"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.099"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","  0.100"
"1","  0.5702330"
"1","  0.2471915"
"1","
"
"1","
"
"1","Accuracy was used to select the optimal model using the largest value.
"
"1","The final value used for the model was cp = 0.1."
"1","
"
"0","#Classification Tree - With Validation Set"
"0","EPLTree <- rpart(FTR~., data= Train, method = ""class"",  cp = 0.1)"
"0","fancyRpartPlot(EPLTree)"
