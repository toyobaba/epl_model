"0","#Generate agg cols for spi"
"0","spiMatches[,attack1 := xg1+nsxg1+adj_score1]"
"0","spiMatches[,attack2 := xg2+nsxg2+adj_score2]"
"0",""
"0","#Column bind spi data and betting data"
"0","EPL1617 = cbind(EPL1617, spiMatches[1:380,17:24])"
"0","EPL1718 = cbind(EPL1718, spiMatches[381:760,17:24])"
"0","EPL1819 = cbind(EPL1819, spiMatches[761:1140,17:24])"
"0","EPL1920 = cbind(EPL1920, spiMatches[1141:(1140+nrow(EPL1920)),17:24])"
"0",""
"0","#Efficiency"
"0","EPL1617[, Inefficiency1 := attack1-FTHG]"
"0","EPL1617[, Inefficiency2 := attack2-FTAG]"
"0","EPL1718[, Inefficiency1 := attack1-FTHG]"
"0","EPL1718[, Inefficiency2 := attack2-FTAG]"
"0","EPL1819[, Inefficiency1 := attack1-FTHG]"
"0","EPL1819[, Inefficiency2 := attack2-FTAG]"
"0","EPL1920[, Inefficiency1 := attack1-FTHG]"
"0","EPL1920[, Inefficiency2 := attack2-FTAG]"
"0","allSeasons = list(EPL1617,EPL1718,EPL1819,EPL1920)"
"0",""
"0","#List to hold all tables that have the new columns"
"0","meltedDataList = list()"
"0",""
"0","#Separate Predictor variables from Aggregators."
"0","aggregateEplCols = c(""HomeTeam"",""AwayTeam"",""FTHG"",""FTAG"",""HTHG"",""HTAG"",""HS"",""AS"",""HST"",""AST"",""HF"",""AF"",""HC"",""AC"",""HY"",""AY"",""HR"",""AR"")"
"0",""
"0","seasonMeltMeasureList = list(c(""HomeTeam"", ""AwayTeam""),c(""FTHG"", ""FTAG""),c(""HTHG"", ""HTAG""),c(""HS"", ""AS""),c(""HST"", ""AST""),c(""HF"", ""AF""),c(""HC"", ""AC""),c(""HY"", ""AY""),c(""HR"", ""AR""),"
"0","                             c(""xg1"",""xg2""),c(""nsxg1"",""nsxg2""),c(""adj_score1"",""adj_score2""),c(""attack1"",""attack2""),c(""Inefficiency1"",""Inefficiency2""))"
"0",""
"0","seasonMeltNames = c(""Team"",""FTG"",""HTG"",""Shots"",""ST"",""Fouls"",""Corners"",""Yellow"",""Red"",""xg"",""nsxg"",""adj_score"",""attack"",""Inefficiency"")"
"0",""
"0","#For loop to aggregate each season data"
"0","for(season in allSeasons){"
"0","  #Melt to combine home and away results - Note separate running averages in future"
"0","  season = melt(season, measure = seasonMeltMeasureList, value.name = seasonMeltNames)"
"0","  meltedDataList[[length(meltedDataList)+1]] <- season"
"0","}"
"0","allMeltedData = rbindlist(meltedDataList)"
"0",""
"0","#New columns for the rolling Averages"
"0","rollingAvgColumns = paste0(c(""FTG"",""HTG"",""Shots"",""ST"",""Fouls"",""Corners"",""Yellow"",""Red"",""xg"",""nsxg"",""adj_score"",""attack"",""Inefficiency""),""rAvg"")"
"0",""
"0","##Custom function - Find the rolling mean and then shift by 1, so that the previous averages are used"
"0","shift_froll = function(x, n){shift(frollmean(x, n= n))}"
"0","#bMelted[,variable:= as.factor(variable)]"
"0",""
"0","#Rolling Maean and Shift"
"0","allMeltedData[, (rollingAvgColumns):= lapply(.SD, shift_froll,  n = 5), by = c(""Team"",""variable""), .SDcols =  c(""FTG"",""HTG"",""Shots"",""ST"",""Fouls"",""Corners"",""Yellow"",""Red"",""xg"",""nsxg"",""adj_score"",""attack"",""Inefficiency"")]"
"0",""
"0","#Fill NA values from rolling window and shifting with mean"
"0","allMeltedData[,16:28 := na.aggregate(allMeltedData[,16:28] )]"
"0",""
"0","#United = allMeltedData[Team == ""Man United"" & variable == 1,]"
"0",""
"0","#Modelling Data"
"0","#--------------"
"0","#Fold data into Home and Away"
"0","awayNames = names(allMeltedData[,16:28])#Get table names except variable"
"0","awayNames = paste0(awayNames,""Away"")#Add away to specify stats"
"0","allHome = allMeltedData[variable == 1, 16:28] #Home Stats without variable"
"0","allAway = allMeltedData[variable == 2, 16:28] #Away stats without the variable"
"0","names(allAway) = awayNames"
"0","allBound = cbind(allHome, allAway)"
"0",""
"0","#Column bind data to get home and away wide table"
"0","finalData = cbind(modelData, allBound,spiMatches[1:nrow(allBound),6:12])"
