"0","numFolds <- trainControl(method=""cv"", number=5)
cpGrid <- expand.grid(.cp=seq(0.001,0.05,0.001))#cp paramaeters to teast as numbers from 0.0005 to 0.05, in increments of 0.01.
train(FTR~BbAvH+STrDiff+ xgrDiff+ nsxgrDiff, data = Train, method=""rpart"", trControl=numFolds, tuneGrid = cpGrid) #cp = 0.0155
"
"1","CART"
"1"," "
"1","

"
"1","916"
"1",""
"1"," samples"
"1","
"
"1","  4"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","  3"
"1"," "
"1","classes:"
"1"," "
"1","'A', 'D', 'H'"
"1"," "
"1","
"
"1","
"
"1","No pre-processing
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (5 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","733, 733, 733, 733, 732"
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  cp   "
"1","  Accuracy "
"1","  Kappa    "
"1","
"
"1","  0.001"
"1","  0.4682823"
"1","  0.1540256"
"1","
"
"1","  0.002"
"1","  0.4792112"
"1","  0.1684824"
"1","
"
"1","  0.003"
"1","  0.5108696"
"1","  0.2070974"
"1","
"
"1","  0.004"
"1","  0.5196127"
"1","  0.2120943"
"1","
"
"1","  0.005"
"1","  0.5228914"
"1","  0.2152089"
"1","
"
"1","  0.006"
"1","  0.5283500"
"1","  0.2222312"
"1","
"
"1","  0.007"
"1","  0.5283500"
"1","  0.2196823"
"1","
"
"1","  0.008"
"1","  0.5327215"
"1","  0.2273145"
"1","
"
"1","  0.009"
"1","  0.5425576"
"1","  0.2424148"
"1","
"
"1","  0.010"
"1","  0.5403837"
"1","  0.2413247"
"1","
"
"1","  0.011"
"1","  0.5371169"
"1","  0.2303369"
"1","
"
"1","  0.012"
"1","  0.5349311"
"1","  0.2209968"
"1","
"
"1","  0.013"
"1","  0.5480459"
"1","  0.2313113"
"1","
"
"1","  0.014"
"1","  0.5480459"
"1","  0.2313113"
"1","
"
"1","  0.015"
"1","  0.5480459"
"1","  0.2313113"
"1","
"
"1","  0.016"
"1","  0.5480459"
"1","  0.2322207"
"1","
"
"1","  0.017"
"1","  0.5480459"
"1","  0.2322207"
"1","
"
"1","  0.018"
"1","  0.5469530"
"1","  0.2313709"
"1","
"
"1","  0.019"
"1","  0.5469530"
"1","  0.2313709"
"1","
"
"1","  0.020"
"1","  0.5469530"
"1","  0.2313709"
"1","
"
"1","  0.021"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.022"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.023"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.024"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.025"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.026"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.027"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.028"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.029"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.030"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.031"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.032"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.033"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.034"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.035"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.036"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.037"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.038"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.039"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.040"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.041"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.042"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.043"
"1","  0.5425814"
"1","  0.2207491"
"1","
"
"1","  0.044"
"1","  0.5436683"
"1","  0.2254741"
"1","
"
"1","  0.045"
"1","  0.5436683"
"1","  0.2254741"
"1","
"
"1","  0.046"
"1","  0.5436683"
"1","  0.2254741"
"1","
"
"1","  0.047"
"1","  0.5436683"
"1","  0.2254741"
"1","
"
"1","  0.048"
"1","  0.5436683"
"1","  0.2254741"
"1","
"
"1","  0.049"
"1","  0.5436683"
"1","  0.2254741"
"1","
"
"1","  0.050"
"1","  0.5436683"
"1","  0.2254741"
"1","
"
"1","
"
"1","Accuracy was used to select the optimal model using the largest value.
"
"1","The final value used for the model was cp = 0.017."
"1","
"
